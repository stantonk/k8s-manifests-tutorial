apiVersion: v1
kind: Service
metadata:
  name: my-service
spec:
  # selector.app must match Deployment.spec.template.metadata.labels.app
  selector:
    app: nginx
  type: NodePort
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
# metadata about the Deployment object
metadata:
  name: nginx-deployment
  labels:
    app: nginx
  annotations:
    version: 0.0.1
# what we want the Deployment's desired state
# to be
spec:
  replicas: 3
  # tells k8s which pods the Deployment manages
  selector:
    # must match spec.template.metadata.labels
    matchLabels:
      app: nginx
  # The "template" here defines the Pod spec
  # for each replica:
  template:
    metadata:
      labels:
        app: nginx
    # This section describes what the Pod should
    # runâ€”like the container image, exposed ports,
    # and other configurations.
    spec:

      containers:
      - name: nginx
        image: nginx:1.14.2
        ports:
        - containerPort: 80
        volumeMounts:
          - mountPath: /etc/config
            name: config-volume

        #TODO probes
#        startupProbe:
#        livenessProbe:
#        readinessProbe:

      # volumes declared available to the
      # pod(s)
      volumes:
        # spec.template.spec.volumes[].name
        # must match spec.template.spec.containers[].volumeMounts[].name
        - name: config-volume
          configMap:
            name: config


---
apiVersion: v1
kind: ConfigMap
data:
  config.yaml: |
    some: "config"
    more: config
    enabled: true
    moreconfig: 5
metadata:
  name: config